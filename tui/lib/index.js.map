{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,IAAM,KAAK,GAAG,uBAAa,CAAA;IACpB,QAAQ,GAAI,KAAK,CAAjB,QAAQ;;AAEf,IAAM,QAAQ,GAAG,SAAX,QAAQ;SACZ;;;IACE,0CAlBO,OAAO,OAkBJ;IACV,0CAnBF,OAAO,OAmBK;GACF;CACX,CAAA;;kBAEc,UAAC,GAAG,EAAK;;AAEtB,MAAM,MAAM,GAAG,kBAAQ,MAAM,CAAC;AAC5B,eAAW,EAAE,IAAI;AACjB,YAAQ,EAAE,IAAI;AACd,SAAK,EAAE,mBAAmB;AAC1B,aAAS,EAAE,IAAI;AACf,eAAW,EAAE,IAAI;AACjB,eAAW,EAAE,IAAI;AACjB,SAAK,EAAE,IAAI;AACX,gBAAY,EAAE,CAAC,KAAK,CAAC;GACtB,CAAC,CAAA;;AAEF,QAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,UAAS,EAAE,EAAE,GAAG,EAAE;AACnD,WAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GACxB,CAAC,CAAA;;AAEF,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aAnCjC,UAAU,EAmCkC,QAAQ,CAAC,CAAC;GAAA,CAAC,CAAA;AACvD,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aApCjC,UAAU,EAoCkC,OAAO,CAAC,CAAC;GAAA,CAAC,CAAA;AACtD,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aArCjC,UAAU,EAqCkC,OAAO,CAAC,CAAC;GAAA,CAAC,CAAA;AACtD,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aAtCjC,UAAU,EAsCkC,SAAS,CAAC,CAAC;GAAA,CAAC,CAAA;AACxD,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aAvCjC,UAAU,EAuCkC,WAAW,CAAC,CAAC;GAAA,CAAC,CAAA;AAC1D,QAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE;WAAM,QAAQ,CAAC,aAxCjC,UAAU,EAwCkC,aAAa,CAAC,CAAC;GAAA,CAAC,CAAA;;AAE5D,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;WAAM,QAAQ,CAAC,aA3CnC,QAAQ,EA2CoC,QAAQ,CAAC,CAAC;GAAA,CAAC,CAAA;AACvD,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;WAAM,QAAQ,CAAC,aA5CnC,QAAQ,EA4CoC,YAAY,CAAC,CAAC;GAAA,CAAC,CAAA;AAC3D,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;WAAM,QAAQ,CAAC,aA7CnC,QAAQ,EA6CoC,WAAW,CAAC,CAAC;GAAA,CAAC,CAAA;AAC1D,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;WAAM,QAAQ,CAAC,aA9CnC,QAAQ,EA8CoC,SAAS,CAAC,CAAC;GAAA,CAAC,CAAA;;AAGxD,SAAO,kBAxDD,MAAM,EAyDV;gBA1DI,QAAQ;MA0DF,KAAK,EAAE,KAAK,AAAC;IACrB,8BAAC,QAAQ,OAAE;GACF,EACX,MAAM,CAAC,CAAA;CAEV","file":"index.js","sourcesContent":["import React from 'react'\nimport blessed from 'blessed'\nimport {Provider} from 'react-redux'\nimport {render} from 'react-blessed'\nimport createStore from './store/create'\nimport {\n  Console, Sources\n} from './containers'\n\nimport {\n  focusTab,\n  focusPanel,\n  receiveFiles,\n  receiveCallstack,\n  receiveBreakpoints,\n  receiveScope,\n  receiveSource\n} from './actions'\n\nconst store = createStore()\nconst {dispatch} = store\n\nconst Devtools = () => (\n  <element>\n    <Sources/>\n    <Console/>\n  </element>\n)\n\nexport default (pid) => {\n\n  const screen = blessed.screen({\n    autoPadding: true,\n    smartCSR: true,\n    title: 'Terminal Devtools',\n    sendFocus: true,\n    dockBorders: true,\n    autoPadding: true,\n    debug: true,\n    ignoreLocked: ['C-c']\n  })\n\n  screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n    return process.exit(0);\n  })\n\n  screen.key(['e'], () => dispatch(focusPanel('editor')))\n  screen.key(['f'], () => dispatch(focusPanel('files')))\n  screen.key(['s'], () => dispatch(focusPanel('scope')))\n  screen.key(['c'], () => dispatch(focusPanel('console')))\n  screen.key(['a'], () => dispatch(focusPanel('callstack')))\n  screen.key(['b'], () => dispatch(focusPanel('breakpoints')))\n\n  screen.key(['C-s'], () => dispatch(focusTab('source')))\n  screen.key(['C-n'], () => dispatch(focusTab('networking')))\n  screen.key(['C-p'], () => dispatch(focusTab('profiling')))\n  screen.key(['C-k'], () => dispatch(focusTab('console')))\n\n\n  return render(\n    <Provider store={store}>\n      <Devtools/>\n    </Provider>\n  , screen)\n\n}"]}