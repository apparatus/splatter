{"version":3,"sources":["../../src/lib/debug.js"],"names":[],"mappings":"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","file":"debug.js","sourcesContent":["/*\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\n'use strict';\n\nimport DebuggerApi from 'debugger-api'\n\nexport default () => {\n  const currentContext = {breakpoints: []}\n  let dbg\n  let handler\n\n  const augmentStack = bp => {\n    let url\n    let script\n\n    bp.callFrames.forEach(({location}) => {\n      script = dbg.scripts.findScriptByID(location.scriptId)\n      if (script) {\n        url = dbg.scripts.findScriptByID(location.scriptId).url\n      }\n      location.url = url\n    })\n  }\n\n  const updateContext = (bp, cb) => {\n    dbg.getScriptSource({scriptId: bp.callFrames[0].location.scriptId}, (err, result) => {\n      currentContext.bp = bp\n      currentContext.source = result.scriptSource\n      currentContext.scriptId = bp.callFrames[0].location.scriptId\n      currentContext.lineNumber = bp.callFrames[0].location.lineNumber\n      currentContext.columnNumber = bp.callFrames[0].location.columnNumber\n      augmentStack(bp)\n      cb(err, currentContext)\n    })\n  }\n\n  const fetchContext = cb => dbg.once('Debugger.paused', bp => {\n    updateContext(bp, (err, context) => {\n      cb(err, context)\n    })\n  })\n\n  const start = (debugPort = 5858, cb) => {\n    dbg = new DebuggerApi({debugPort})\n    dbg.enable()\n    fetchContext(cb)\n  }\n\n  const currentLine = () => {}\n\n  const breakpoints = () => {}\n\n  const setHandler = h => {\n    handler = h\n    dbg.on('Debugger.paused', breakPoint => {\n      updateContext(breakPoint, (err, context) => {\n        handler(err, context)\n      })\n    })\n  }\n\n  const step = (cb=()=>{}) => dbg.stepOver(null, () => fetchContext(cb))\n\n  const resume = (cb=()=>{}) => dbg.resume(null, err => {\n    if (err) { return cb(err) }\n    dbg.disable(null, cb)\n  })\n\n  const pause = (cb=()=>{}) => dbg.enable(null, err => {\n    if (err) { return cb(err) }\n    dbg.pause(null, cb)\n  })\n\n\n  const evaluate = (expression, cb) => {\n    let value\n    let type = 'object'\n    const opts = {\n      expression, \n      callFrameId: currentContext.bp.callFrames[0].callFrameId\n    }\n\n    dbg.evaluateOnCallFrame(opts, (err, result) => {\n      if (err) { return cb(err) }\n\n      if (result.result.type === 'object') {\n        const opts = {\n          expression: 'JSON.stringify(' + expression + ')', \n          callFrameId: currentContext.bp.callFrames[0].callFrameId\n        }\n        dbg.evaluateOnCallFrame(opts, (err, {result:{result}}) => {\n          if (err) { return cb(err) }\n          try {\n            value = JSON.parse(result.description)\n          }\n          catch (e) {\n            value = result.description\n            type = 'string'\n          }\n          cb(null, {type: type, value: value})\n        });\n      }\n      else {\n        cb(null, {type: result.type, value: result.description})\n      }\n    })\n  }\n\n  const setBreakpoint = line => {\n    const {url} = dbg.scripts.findScriptByID(currentContext.scriptId)\n    dbg.setBreakpointByUrl({url, lineNumber: line}, (err, result) => {\n      currentContext.breakpoints.push(result)\n      handler(err, currentContext)\n    })\n  }\n\n  return {\n    start,\n    setHandler,\n    currentLine,\n    breakpoints,\n    resume,\n    pause,\n    evaluate,\n    setBreakpoint,\n    step\n  }\n}\n \n"]}