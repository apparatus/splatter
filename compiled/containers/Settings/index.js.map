{"version":3,"sources":["../../../src/containers/Settings/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAI,YAAY,GAAG,QAAQ,CAAA;;AAE3B,IAAM,QAAQ,GAAG,SAAX,QAAQ,OAA8C;MAAzC,MAAM,QAAN,MAAM;MAAE,QAAQ,QAAR,QAAQ;MAAE,QAAQ,QAAR,QAAQ;MAAE,OAAO,QAAP,OAAO;;AAEpD,MAAM,YAAY,GAAG,SAAf,YAAY,CAAI,EAAE;WAAK,YAAM;;;;AAIjC,kBAAY,CAAC,YAAM;AACjB,gBAAQ,CAAC,aAhBP,UAAU,EAgBQ,QAAQ,CAAC,CAAC,CAAA;AAC9B,oBAAY,CAAC,YAAM;AACjB,kBAAQ,CAAC,aAlBG,aAAa,EAkBF,kBAAQ,EAAE,CAAC,CAAC,CAAC,CAAA;AACpC,sBAAY,GAAG,EAAE,CAAA;AACjB,kBAAQ,CAAC,aApBT,UAAU,EAoBU,UAAU,CAAC,CAAC,CAAA;SACjC,CAAC,CAAA;OACH,CAAC,CAAA;KACH;GAAA,CAAA;;AAED,MAAM,cAAc,GAAG,SAAjB,cAAc,GAAS;AAC3B,gBAAY,CAAC,YAAM;AACjB,cAAQ,CAAC,aA3BP,UAAU,EA2BQ,QAAQ,CAAC,CAAC,CAAA;AAC9B,kBAAY,CAAC,YAAM;AACjB,gBAAQ,CAAC,aA7BkB,cAAc,GA6BhB,CAAC,CAAA;AAC1B,oBAAY,GAAG,UAAU,CAAA;AACzB,gBAAQ,CAAC,aA/BT,UAAU,EA+BU,UAAU,CAAC,CAAC,CAAA;OACjC,CAAC,CAAA;KACH,CAAC,CAAA;GACH,CAAA;;AAED,SAAQ,0CAhCR,QAAQ,eAiCF,MAAM,CAAC,QAAQ;AACnB,gBAAY,EAAE,YAAY,IAAI,MAAM,AAAC;AACrC,WAAO,EAAE,OAAO,AAAC;AACjB,UAAM,EAAE,MAAM,AAAC;AACf,YAAQ,EAAE,QAAQ,AAAC;AACnB,gBAAY,EAAE,YAAY,AAAC;AAC3B,kBAAc,EAAE,cAAc,AAAC;KAC/B,CAAC;CACJ,CAAA;;kBAEc,gBAhDP,OAAO,EAgDQ;MAAE,MAAM,SAAN,MAAM;MAAE,QAAQ,SAAR,QAAQ;SAAO,EAAC,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAC;CAAC,CAAC,CAAC,QAAQ,CAAC","file":"index.js","sourcesContent":["import React from 'React'\nimport {connect} from 'react-redux'\nimport {focusPanel, setDimensions, toggleTooltips} from '../../actions'\nimport layouts from '../../config/layouts'\n\nimport {\n  Settings as SettingsCmp\n} from '../../components'\n\nlet focusedInput = 'normal'\n\nconst Settings = ({layout, tooltips, dispatch, focused}) => {\n\n  const changeLayout = (to) => () => {\n    //hack - react-blessed and/or blessed currently \n    //doesn't do well with multiple rendering changes \n    //in the same event loop\n    setImmediate(() => {\n      dispatch(focusPanel('editor'))\n      setImmediate(() => {\n        dispatch(setDimensions(layouts[to]))\n        focusedInput = to\n        dispatch(focusPanel('settings'))\n      })\n    })  \n  }\n\n  const tooltipsToggle = () => {\n    setImmediate(() => {\n      dispatch(focusPanel('editor'))\n      setImmediate(() => {\n        dispatch(toggleTooltips())\n        focusedInput = 'tooltips'\n        dispatch(focusPanel('settings'))\n      })\n    })  \n  }\n\n  return (<SettingsCmp \n    {...layout.settings}\n    focusedInput={focusedInput || layout}\n    focused={focused}\n    layout={layout}\n    tooltips={tooltips}\n    changeLayout={changeLayout} \n    toggleTooltips={tooltipsToggle}\n  />)\n}\n\nexport default connect(({layout, tooltips}) => ({layout, tooltips}))(Settings)"]}