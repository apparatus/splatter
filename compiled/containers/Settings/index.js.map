{"version":3,"sources":["../../../src/containers/Settings/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAOA,IAAI,YAAY,GAAG,QAAQ,CAAA;;AAE3B,IAAM,QAAQ,GAAG,SAAX,QAAQ,OAA8C;MAAzC,MAAM,QAAN,MAAM;MAAE,QAAQ,QAAR,QAAQ;MAAE,QAAQ,QAAR,QAAQ;MAAE,OAAO,QAAP,OAAO;;AACpD,MAAM,YAAY,GAAG,SAAf,YAAY,CAAI,EAAE;WAAK,YAAM;;;;AAIjC,kBAAY,CAAC,YAAM;AACjB,gBAAQ,CAAC,aAbN,UAAU,EAaO,QAAQ,CAAC,CAAC,CAAA;AAC9B,gBAAQ,CAAC,aAdM,YAAY,GAcJ,CAAC,CAAA;AACxB,oBAAY,CAAC,YAAM;AACjB,kBAAQ,CAAC,aAhBkB,aAAa,EAgBjB,kBAAQ,EAAE,CAAC,CAAC,CAAC,CAAA;AACpC,sBAAY,GAAG,EAAE,CAAA;AACjB,kBAAQ,CAAC,aAlBR,UAAU,EAkBS,UAAU,CAAC,CAAC,CAAA;SACjC,CAAC,CAAA;OACH,CAAC,CAAA;KACH;GAAA,CAAA;;AAED,MAAM,cAAc,GAAG,SAAjB,cAAc,GAAS;AAC3B,gBAAY,CAAC,YAAM;AACjB,cAAQ,CAAC,aAzBN,UAAU,EAyBO,QAAQ,CAAC,CAAC,CAAA;AAC9B,kBAAY,CAAC,YAAM;AACjB,gBAAQ,CAAC,aA3BiC,cAAc,GA2B/B,CAAC,CAAA;AAC1B,oBAAY,GAAG,UAAU,CAAA;AACzB,gBAAQ,CAAC,aA7BR,UAAU,EA6BS,UAAU,CAAC,CAAC,CAAA;OACjC,CAAC,CAAA;KACH,CAAC,CAAA;GACH,CAAA;;AAED,SACE,0CAhCK,QAAQ,eAiCP,MAAM,CAAC,QAAQ;AACnB,gBAAY,EAAE,YAAY,IAAI,MAAM,AAAC;AACrC,WAAO,EAAE,OAAO,AAAC;AACjB,UAAM,EAAE,MAAM,AAAC;AACf,YAAQ,EAAE,QAAQ,AAAC;AACnB,gBAAY,EAAE,YAAY,AAAC;AAC3B,kBAAc,EAAE,cAAc,AAAC;KAC/B,CACH;CACF,CAAA;;kBAEc,gBAhDN,OAAO,EAgDO;MAAE,MAAM,SAAN,MAAM;MAAE,QAAQ,SAAR,QAAQ;SAAO,EAAC,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAC;CAAC,CAAC,CAAC,QAAQ,CAAC","file":"index.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { focusPanel, refetchScope, setDimensions, toggleTooltips } from '../../actions'\nimport layouts from '../../config/layouts'\n\nimport { Settings as SettingsCmp } from '../../components'\n\nlet focusedInput = 'normal'\n\nconst Settings = ({layout, tooltips, dispatch, focused}) => {\n  const changeLayout = (to) => () => {\n    // hack - react-blessed and/or blessed currently\n    // doesn't do well with multiple rendering changes\n    // in the same event loop\n    setImmediate(() => {\n      dispatch(focusPanel('editor'))\n      dispatch(refetchScope())\n      setImmediate(() => {\n        dispatch(setDimensions(layouts[to]))\n        focusedInput = to\n        dispatch(focusPanel('settings'))\n      })\n    })\n  }\n\n  const tooltipsToggle = () => {\n    setImmediate(() => {\n      dispatch(focusPanel('editor'))\n      setImmediate(() => {\n        dispatch(toggleTooltips())\n        focusedInput = 'tooltips'\n        dispatch(focusPanel('settings'))\n      })\n    })\n  }\n\n  return (\n    <SettingsCmp\n      {...layout.settings}\n      focusedInput={focusedInput || layout}\n      focused={focused}\n      layout={layout}\n      tooltips={tooltips}\n      changeLayout={changeLayout}\n      toggleTooltips={tooltipsToggle}\n    />\n  )\n}\n\nexport default connect(({layout, tooltips}) => ({layout, tooltips}))(Settings)\n"]}