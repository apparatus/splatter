{"version":3,"sources":["../../../src/containers/Sources/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAOY;;;;;;AAEZ,IAAM,UAAU,SAAV,OAAU;MACd;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;SAEA;;IAAa,OAAO,OAAP;IACX,gEAAW,UAAU,QAAV,EAAoB,OAAO,KAAP,EAAc,MAAM,QAAN,EAAgB,SAAS,UAAU,WAAV,EAAuB,SAAS,OAAT,IAAsB,OAAO,SAAP,CAAnH,CADF;IAEE,6DAAQ,UAAU,QAAV,EAAoB,OAAO,MAAP,EAAe,UAAU,UAAV,EAAsB,SAAS,UAAU,QAAV,EAAoB,SAAS,OAAT,IAAsB,OAAO,MAAP,CAApH,CAFF;IAGE,mEAAc,UAAU,QAAV,EAAoB,MAAM,UAAN,EAAkB,MAAM,QAAN,IAAoB,OAAO,YAAP,CAAxE,CAHF;IAIE,gEAAW,UAAU,QAAV,EAAoB,OAAO,SAAP,EAAkB,SAAS,UAAU,WAAV,EAAuB,SAAS,OAAT,IAAsB,OAAO,SAAP,CAAvG,CAJF;IAKE,kEAAa,UAAU,QAAV,EAAoB,OAAO,WAAP,EAAoB,SAAS,UAAU,aAAV,EAAyB,SAAS,OAAT,IAAsB,OAAO,WAAP,CAA7G,CALF;IAME,4DAAO,UAAU,QAAV,EAAoB,OAAO,KAAP,EAAc,MAAM,SAAN,EAAiB,SAAS,UAAU,OAAV,EAAmB,SAAS,OAAT,IAAsB,OAAO,KAAP,CAA5G,CANF;IAQI,KAAC,KAAU,WAAV,IAAyB,eAAe,SAAf,IACxB,gEAAW,OAAO;eAAM,QAAQ,UAAR,CAAmB,QAAnB;OAAN,EAAoC,UAAU,QAAV,EAAoB,OAAO,KAAP,EAAc,MAAM,QAAN,EAAgB,SAAS,UAAU,WAAV,EAAuB,SAAS,OAAT,IAAsB,OAAO,SAAP,CAA9J,CADF;IAIA,KAAC,KAAU,OAAV,IAAqB,eAAe,SAAf,IACpB,4DAAO,OAAO;eAAM,QAAQ,UAAR,CAAmB,QAAnB;OAAN,EAAoC,UAAU,QAAV,EAAoB,OAAO,KAAP,EAAc,MAAM,SAAN,EAAiB,SAAS,UAAU,OAAV,EAAmB,SAAS,OAAT,IAAsB,OAAO,KAAP,CAAvJ,CADF;IAGF,8DAAS,UAAU,QAAV,EAAoB,QAAQ,MAAR,EAAgB,SAAS,UAAU,SAAV,EAAqB,SAAS,OAAT,IAAsB,OAAO,OAAP,CAAjG,CAfF;;CAjBc;;AAoChB,IAAM,WAAW,SAAX,QAAW;MACf;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;SACK;AACL,gBAAY,OAAO,IAAP;AACZ,YAAQ,OAAO,OAAP;AACR,kBAHK;AAIL,cAAU,KAAK,CAAL,MAAY,GAAZ,GAAkB,oBAAS,IAAT,CAAlB,GAAmC,IAAnC;AACV,gBALK;AAML,sBANK;AAOL,wBAPK;AAQL,0BARK;AASL,wBATK;AAUL,4BAVK;AAWL,gBAXK;AAYL,gBAZK;AAaL,sBAbK;AAcL,kBAdK;;CAdU;;AA+BjB,IAAM,cAAc,SAAd,WAAc;SAAa;AAC/B,aAAS,+BAAmB,cAAnB,EAAmC,QAAnC,CAAT;;CADkB;;kBAIL,yBAAQ,QAAR,EAAkB,WAAlB,EAA+B,OAA/B","file":"index.js","sourcesContent":["import React from 'react'\nimport {basename} from 'path'\nimport {bindActionCreators} from 'redux'\nimport {connect} from 'react-redux'\nimport {\n  BreakPoints, CallStack, Console, Editor, EditorStatus, Navigator, Scope\n} from '../../components'\nimport * as actionCreators from '../../actions'\n\nconst Sources = ({\n  layoutName,\n  layout,\n  source,\n  filename,\n  files,\n  fileItem,\n  scopeItem,\n  editorLine,\n  callstack,\n  breakpoints,\n  scope,\n  panel,\n  actions,\n  tooltips,\n  output\n}) => (\n  <element {...layout.element}>\n    <Navigator tooltips={tooltips} items={files} item={fileItem} focused={panel === 'navigator'} actions={actions} {...layout.navigator}/>\n    <Editor tooltips={tooltips} items={source} selected={editorLine} focused={panel === 'editor'} actions={actions} {...layout.editor}/>\n    <EditorStatus tooltips={tooltips} line={editorLine} file={filename} {...layout.editorstatus}/>\n    <CallStack tooltips={tooltips} items={callstack} focused={panel === 'callstack'} actions={actions} {...layout.callstack}/>\n    <BreakPoints tooltips={tooltips} items={breakpoints} focused={panel === 'breakpoints'} actions={actions} {...layout.breakpoints}/>\n    <Scope tooltips={tooltips} items={scope} item={scopeItem} focused={panel === 'scope'} actions={actions} {...layout.scope}/>\n    {\n      (panel === 'navigator' && layoutName === 'minimal') &&\n        <Navigator onEsc={() => actions.focusPanel('editor')} tooltips={tooltips} items={files} item={fileItem} focused={panel === 'navigator'} actions={actions} {...layout.navigator}/>\n    }\n    {\n      (panel === 'scope' && layoutName === 'minimal') &&\n        <Scope onEsc={() => actions.focusPanel('editor')} tooltips={tooltips} items={scope} item={scopeItem} focused={panel === 'scope'} actions={actions} {...layout.scope}/>\n    }\n    <Console tooltips={tooltips} output={output} focused={panel === 'console'} actions={actions} {...layout.console}/>\n  </element>\n)\n\nconst mapState = ({\n  layout,\n  file,\n  fileItem,\n  scopeItem,\n  editorLine,\n  source,\n  files,\n  callstack,\n  breakpoints,\n  scope,\n  panel,\n  tooltips,\n  output\n}) => ({\n  layoutName: layout.name,\n  layout: layout.sources,\n  source,\n  filename: file[0] === '/' ? basename(file) : file,\n  files,\n  fileItem,\n  scopeItem,\n  editorLine,\n  callstack,\n  breakpoints,\n  scope,\n  panel,\n  tooltips,\n  output\n})\n\nconst mapDispatch = dispatch => ({\n  actions: bindActionCreators(actionCreators, dispatch)\n})\n\nexport default connect(mapState, mapDispatch)(Sources)\n"]}