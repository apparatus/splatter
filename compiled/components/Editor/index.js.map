{"version":3,"sources":["../../../src/components/Editor/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAEY,KAAK;;;;;;AAEjB,IAAM,EAAE,GAAG;AACT,OAAK,EAAE;AACL,YAAQ,EAAE;AACR,UAAI,EAAE,IAAI;AACV,QAAE,EAAE,MAAM;KACX;AACD,QAAI,EAAE;AACJ,UAAI,EAAE,KAAK;KACZ;AACD,aAAS,EAAE;AACT,QAAE,EAAE,OAAO;KACZ;GACF;CACF,CAAA;;AAED,IAAM,MAAM,GAAG,SAAT,MAAM;MACV,KAAK,QAAL,KAAK;MAAE,QAAQ,QAAR,QAAQ;MAAE,GAAG,QAAH,GAAG;MAAE,IAAI,QAAJ,IAAI;MAAE,KAAK,QAAL,KAAK;MAAE,MAAM,QAAN,MAAM;MAAE,OAAO,QAAP,OAAO;0BAClD,OAAO;MAAG,aAAa,gBAAb,aAAa;MAAE,UAAU,gBAAV,UAAU;MAAE,gBAAgB,gBAAhB,gBAAgB;SAErD;AACE,aAAO,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,AAAC;AACpD,YAAQ,EAAE,QAAQ,AAAC;AACnB,QAAI,EAAE,IAAI,AAAC;AACX,SAAK,EAAE,KAAK,AAAC;AACb,OAAG,EAAE,GAAG,AAAC;AACT,UAAM,EAAE,MAAM,AAAC;AACf,aAAS,EAAE,IAAI,AAAC;AAChB,SAAK,EAAE,IAAI,AAAC;AACZ,QAAI,EAAE,IAAI,AAAC;AACX,MAAE,EAAE,IAAI,AAAC;AACT,kBAAc,EAAE,IAAI,AAAC;AACrB,WAAO,EAAE,OAAO,AAAC;AACjB,SAAK,EAAE,KAAK,AAAC;AACb,gBAAY,EAAE,sBAAA,IAAI,EAAI;AACpB,gBAAU,CAAC,QAAQ,CAAC,CAAA;AACpB,mBAAa,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAA;KAC9C,AAAC;AACF,UAAM,EAAE;aAAM,gBAAgB,EAAE;KAAA,AAAC;IACjC;CACH,CAAA;;kBAEc,MAAM;kBAEN,+BAAW,MAAM,EAAE;AAChC,uBAAqB,EAAE,+BAAC,KAAK,EAAE,SAAS,EAAK;AAC3C,QAAI,CAAC,SAAS,CAAC,OAAO,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC,QAAQ,EAAE,OAAO,IAAI,CAAA;AAC5E,WAAO,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,OAAO,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,CAAC,KAAK,CAAA;GAC9E;CACF,CAAC","file":"index.js","sourcesContent":["import React from 'react'\nimport functional from 'react-functional'\nimport * as style from '../../style'\n\nconst ed = {\n  style: {\n    selected: {\n      bold: true,\n      bg: 'blue'\n    },\n    item: {\n      bold: false\n    },\n    scrollbar: {\n      bg: 'white'\n    },\n  }\n}\n\nconst Editor = ({\n  items, selected, top, left, width, height, focused, \n  actions: {setEditorLine, focusPanel, toggleBreakpoint}\n}) => (\n  <list\n    class={[style.panel, ed, focused && style.selected]}\n    selected={selected}\n    left={left}\n    width={width}\n    top={top}\n    height={height}\n    scrollbar={true}\n    mouse={true}\n    keys={true}\n    vi={true}\n    inputOnFocused={true}\n    focused={focused}\n    items={items}\n    onSelectItem={item => {\n      focusPanel('editor')\n      setEditorLine(item.parent.getItemIndex(item))\n    }}\n    onKeyB={() => toggleBreakpoint()}\n  />\n)\n\nexport default Editor\n\nexport default functional(Editor, {\n  shouldComponentUpdate: (props, nextProps) => {\n    if (!nextProps.focused && props.selected !== nextProps.selected) return true\n    return props.focused !== nextProps.focused || props.items !== nextProps.items\n  }\n})"]}