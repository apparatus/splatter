{"version":3,"sources":["../../../src/components/Editor/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAEY;;;;;;;;AAIZ,IAAM,KAAK;AACT,SAAO;AACL,cAAU;AACR,YAAM,IAAN;AACA,UAAI,MAAJ;KAFF;AAIA,UAAM;AACJ,YAAM,KAAN;KADF;AAGA,eAAW;AACT,UAAI,OAAJ;KADF;GARF;CADI;;AAeN,IAAM,SAAS,SAAT,MAAS;MAAE;MAAO;MAAU;MAAK;MAAM;MAAO;MAAQ;MAAS;0BAAU;MAAU;MAAe;MAAY;SAClH;AACE;AACA;AACA;AACA;AACA;AACA,aAAO,CAAC,MAAM,KAAN,EAAa,EAAd,EAAkB,WAAW,MAAM,QAAN,CAApC;AACA,cAAU,SAAS,GAAT;AACV,UAAM,IAAN;AACA,WAAO,KAAP;AACA,SAAK,GAAL;AACA,YAAQ,MAAR;AACA,aAAS,OAAT;AACA,WAAO,KAAP;AACA,kBAAc,4BAAQ;AACpB,iBAAW,QAAX,EADoB;AAEpB,oBAAc,KAAK,MAAL,CAAY,YAAZ,CAAyB,IAAzB,IAAiC,CAAjC,CAAd,CAFoB;KAAR;AAId,YAAQ;aAAM;KAAN;AACR,eAAW,YAAY,sBAAZ;GAnBb;CADa;;kBAwBA;kBAEA,+BAAW,MAAX,EAAmB;AAChC,yBAAuB,+BAAC,KAAD,EAAQ,SAAR,EAAsB;AAC3C,QAAI,CAAC,UAAU,OAAV,IAAqB,MAAM,QAAN,KAAmB,UAAU,QAAV,EAAoB,OAAO,IAAP,CAAjE;AACA,WAAO,MAAM,OAAN,KAAkB,UAAU,OAAV,IAAqB,MAAM,KAAN,KAAgB,UAAU,KAAV,CAFnB;GAAtB;CADV","file":"index.js","sourcesContent":["import React from 'react'\nimport functional from 'react-functional'\nimport * as style from '../../style'\n\n/* eslint-disable react/no-unknown-property */\n\nconst ed = {\n  style: {\n    selected: {\n      bold: true,\n      bg: 'blue'\n    },\n    item: {\n      bold: false\n    },\n    scrollbar: {\n      bg: 'white'\n    }\n  }\n}\n\nconst Editor = ({items, selected, top, left, width, height, focused, tooltips, actions: {setEditorLine, focusPanel, toggleBreakpoint}}) => (\n  <list\n    vi\n    keys\n    mouse\n    scrollbar\n    inputOnFocused\n    class={[style.panel, ed, focused && style.selected]}\n    selected={selected.idx}\n    left={left}\n    width={width}\n    top={top}\n    height={height}\n    focused={focused}\n    items={items}\n    onSelectItem={item => {\n      focusPanel('editor')\n      setEditorLine(item.parent.getItemIndex(item) + 1)\n    }}\n    onKeyB={() => toggleBreakpoint()}\n    hoverText={tooltips && 'Source Text (ctrl+t)'}\n  />\n)\n\nexport default Editor\n\nexport default functional(Editor, {\n  shouldComponentUpdate: (props, nextProps) => {\n    if (!nextProps.focused && props.selected !== nextProps.selected) return true\n    return props.focused !== nextProps.focused || props.items !== nextProps.items\n  }\n})\n"]}