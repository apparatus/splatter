{"version":3,"sources":["../../../src/components/Console/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react'\nimport functional from 'react-functional'\nimport * as style from '../../style'\n\n/* eslint-disable react/no-unknown-property */\n\nconst Console = ({top, left, width, height, focused, independent, tooltips, output, actions}, cmp) => {\n  return (\n    <textarea\n      ref={el => {\n        cmp.el = el\n        // hack :(\n        if (el && independent && focused) cmp.el.focus()\n      }}\n      mouse\n      label='Console'\n      inputOnFocus\n      focused={focused}\n      class={[style.panel, focused && style.selected]}\n      top={top}\n      left={left}\n      width={width}\n      height={height}\n      hoverText={actions && tooltips && 'ctrl+k'}\n      value={\n        !(cmp && cmp.force) ?\n          (output.all + '> ' + (\n            output.historyIndex ? \n              output.history.slice(output.historyIndex).shift() : \n              ''\n          )) : \n          cmp.force()\n      }\n      onFocus={() => (independent || focused || actions.focusPanel('console'))}\n      onKeyTab={() => {\n        if (independent) {\n          actions.focusTab('sources')\n          actions.focusPanel('console')\n          return\n        }\n        cmp.el._done()\n        actions.focusPanel('navigator')\n      }}\n      onKeyUp={() => {\n        actions.consoleHistory({step: -1})\n      }}\n      onKeyDown={() => {\n        actions.consoleHistory({step: 1})\n      }}\n      onKeyBackspace={(ch, key) => {\n        if (cmp.el.value.substr(-2) === '\\n>') {\n          const val = cmp.el.value\n          cmp.force = () => { cmp.force = null; return val + ' ' }\n          cmp.forceUpdate()\n        }\n      }}\n      onKeypress={(ch, key) => {\n        if (key.name === 'return' && !key.shift) {\n          const lines = cmp.el.getLines()\n          const cmd = (lines[lines.length - 2]+'').substr(2)\n          actions.consoleInput(cmd)\n          return\n        }\n        if (independent) {\n          if (key.name === 'escape') {\n            // hack :( - avoids intermittent crashing\n            setTimeout(() => {\n              actions.focusTab('sources')\n              actions.focusPanel('console')\n            })\n          }\n        }\n      }}\n    />\n  )\n}\n\nexport default functional(Console)\n"]}