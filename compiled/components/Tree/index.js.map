{"version":3,"sources":["../../../src/components/Tree/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react'\nimport functional from 'react-functional'\n\n/* eslint-disable react/no-unknown-property */\n/* eslint-disable react/prop-types */\n\nconst noop = () => {}\n\nconst Tree = (props, cmp) => {\n  let selected = 0\n  const {\n    items: tree, onExpand = noop, onContract = noop,\n    onSelect = noop, onSelectItem = noop, item,\n    indentation, labelling, selectOverride\n  } = props\n\n  let {items, map} = traverse(tree, {indentation, labelling})\n\n  if (item && !cmp.$$forcingUpdate$$) {\n    let index = map.indexOf(item)\n    if (index < 0) {\n      const parent = map.find(function locate (o) {\n        let found = o === item && o\n        if (!found) {\n          found = o.value && Object.values(o.value).find(locate)\n        }\n        if (found) {\n          found.options = found.options || {}\n          if (!found.options.expanded) {\n            found.options.expanded = true\n            found.options.autoexpanded = true\n          }\n        }\n        return found\n      })\n      if (parent) {\n        parent.options = parent.options || {}\n        if (!parent.options.expanded) {\n          parent.options.expanded = true\n          parent.options.autoexpanded = true\n        }\n      }\n\n      map\n        .filter(p => p !== parent)\n        .forEach(function reset (o) {\n          if (o.options && o.options.expanded && o.options.autoexpanded) {\n            delete o.options.autoexpanded\n            o.options.expanded = false\n            if (o.value) Object.values(o.value).forEach(reset)\n          }\n        })\n\n      const retrav = traverse(tree, {indentation, labelling})\n      map = retrav.map\n      items = retrav.items\n      if (item.data && item.data.path) {\n        index = map.findIndex(o => {\n          if (!o.data) return\n          return o.data.path === item.data.path\n        })\n      }\n    }\n\n    if (index > -1) {\n      selected = index\n    }\n  }\n\n  if (cmp.$$forcingUpdate$$) {\n    selected = cmp.$$index$$\n  }\n\n  return (\n    <list\n      {...props}\n      keys\n      mouse\n      scrollbar\n      inputOnFocused\n      items={items}\n      selected={selected}\n      onSelectItem={selectOverride ? onSelectItem : noop}\n      onSelect={selectOverride ? onSelect : (c, index) => {\n        const {options = {}, value} = map[index]\n        if (!map[index].options) map[index].options = options\n\n        if (Object(value) !== value || options.terminate) {\n          onSelect(map[index], items[index], index)\n          onSelectItem(map[index], items[index], index, c)\n          cmp.$$index$$ = index\n          cmp.$$forcingUpdate$$ = true\n          cmp.forceUpdate()\n          cmp.$$forcingUpdate$$ = false\n          return\n        }\n\n        options.expanded = !options.expanded\n        if (options.expanded) onExpand(map[index], items[index], index, c)\n        if (!options.expanded) onContract(map[index], items[index], index, c)\n\n        cmp.$$index$$ = index\n        cmp.$$forcingUpdate$$ = true\n        cmp.forceUpdate()\n        cmp.$$forcingUpdate$$ = false\n      }}\n    />\n  )\n}\n\nexport default functional(Tree)\n\nfunction pad (depth = 0, indentation = 2) {\n  return Array.apply(0, Array((depth + 1) * indentation)).join(' ')\n}\n\nfunction traverse (obj, cfg, depth = 0) {\n  if (Array.isArray(obj)) return {items: obj, map: obj}\n  const map = []\n  let {indentation = 2, labelling = false} = cfg\n\n  const items = Object.keys(obj).reduce((items, key) => {\n    const {label, value, options = {}} = obj[key]\n    const {expanded, terminate, prefix: itemPrefix = ''} = options\n\n    if ('labelling' in options) { labelling = options.labelling }\n\n    const valueIsObject = Object(value) === value\n    const prefix = valueIsObject && !terminate\n      ? expanded ? '▾ ' : '▸ '\n      : (depth ? '' : '  ')\n\n    const item = pad(depth, indentation) + itemPrefix + (terminate ? ' ' : '') +\n      prefix + key + (labelling ? ': ' + (label || value) : '')\n\n    items.push(item)\n    map.push(obj[key])\n\n    if (expanded && valueIsObject) {\n      const {items: subItems, map: subMap} = traverse(value, cfg, depth + 1)\n      items.push(...subItems)\n      map.push(...subMap)\n    }\n\n    return items\n  }, [])\n\n  return {items, map}\n}\n"]}