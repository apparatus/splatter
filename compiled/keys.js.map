{"version":3,"sources":["../src/keys.js"],"names":[],"mappings":"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","file":"keys.js","sourcesContent":["import {focusTab, focusPanel, resume, pause, stepOver, stepInto, stepOut} from './actions'\n\n//note: keys.js is for global keys only, component level keys should be declared\n//on a per component basis\n\nexport default (store, screen) => {\n  const {dispatch, getState} = store\n\n  screen.key(['escape', 'q', 'C-c'], function(ch, key) {\n    return process.exit(0);\n  })\n\n  screen.key(['C-n'], () => dispatch(focusPanel('navigator')))\n  screen.key(['C-t'], () => dispatch(focusPanel('editor')))\n  screen.key(['C-s'], () => dispatch(focusPanel('callstack')))\n  screen.key(['C-p'], () => dispatch(focusPanel('breakpoints')))\n  screen.key(['C-o'], () => dispatch(focusPanel('scope')))\n  screen.key(['C-k'], () => dispatch(focusPanel('console')))\n  screen.key(['?'], () => {\n    const {panel} = getState()\n    if (panel === 'settings') {\n      return dispatch(focusPanel('editor'))\n    }\n    dispatch(focusPanel('settings'))\n  })\n\n  screen.key(['F8', 'C-\\\\', 'c'], () => {\n    const {paused} = getState()\n    if (paused) {\n      return dispatch(resume())  \n    }\n    dispatch(pause())\n  })\n  screen.key(['F10', 'C-\\'', 'n'], () => dispatch(stepOver()))\n  screen.key(['F11', 'C-;', 'i'], () => dispatch(stepInto()))\n  screen.key(['S-F11', 'C-S-;', 'o'], () => dispatch(stepOut()))\n\n  screen.key(['tab'], () => {\n    const {panel, tab, layout} = getState()\n    if (panel === 'settings') return\n    const {ordering} = layout[tab]\n    let ix = ordering.indexOf(panel) + 1\n    if (ix >= ordering.length) ix = 0\n    dispatch(focusPanel(ordering[ix]))\n  })\n\n  screen.key(['S-tab'], () => {\n    const {panel, tab, layout} = getState()\n    if (panel === 'settings') return\n    const {ordering} = layout[tab]\n    let ix = ordering.indexOf(panel) - 1\n    if (ix < 0) ix = ordering.length -1\n    dispatch(focusPanel(ordering[ix]))\n  })\n\n}"]}