{"version":3,"sources":["../../src/lib/debug.js"],"names":[],"mappings":"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","file":"debug.js","sourcesContent":["/*\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport {Debugger} from 'yadc'\n\n//important: preserve order\nconst SCOPE_TYPES = ['global', 'local', 'with', 'closure', 'catch']\n\nexport default () => {\n  let debug\n  let seq = 0\n  const scriptIdToUrl = new Map\n\n\n  const scripts = cb => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'scripts',\n      arguments: {\n        types: 4,\n        includeSource: true\n      } \n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('no scripts'))\n\n      res.body.forEach(({id, name}) => scriptIdToUrl.set(id, name))\n      cb(null, res.body)\n    })\n  }\n\n  const backtrace = cb => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'backtrace',\n      arguments: {\n        inlineRefs: true,\n        fromFrame: 0,\n        maxStringLength: 10000\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('no backtrace'))\n      cb(null, res.body)\n    })\n  }\n\n  const breakpoints = cb => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'listbreakpoints'\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('no breakpoints'))\n      res.body.breakpoints = res.body.breakpoints.filter(bp => bp.type === 'scriptName')\n      cb(null, res.body)\n    })\n  }\n\n  const setBreakpoint = ({line, file:target}, cb) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'setbreakpoint',\n      arguments: {\n        type: 'script', target, line\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to set breakpoint'))\n      cb(null, res.body)\n    })\n  }\n\n  const clearBreakpoint = (breakpoint, cb) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'clearbreakpoint',\n      arguments: {\n        type: 'script',\n        breakpoint\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to unset breakpoint'))\n      cb(null, res.body)\n    })\n  }\n\n  const step = (act, cb=()=>{}) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'continue',\n      arguments: {\n        stepaction: act\n      }\n    }, (err) => {\n      if (err) return cb(err)\n      callstack(cb)\n    })\n  }\n\n  const stepOver = cb => step('next', cb)\n  const stepInto = cb => step('in', cb)\n  const stepOut = cb => step('out', cb)\n\n  const resume = (cb=()=>{}) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'continue',\n    }, (err) => {\n      if (err) return cb(err)\n      cb()\n    })\n  }\n\n  const pause = (cb=()=>{}) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'suspend',\n    }, (err) => {\n      if (err) return cb(err)\n      callstack(cb)\n    })\n  }\n\n\n  const lookup = ({handles}, cb) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'lookup',\n      arguments: {\n        handles\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      cb(null, res)\n    })\n  }\n\n  const scopes = ({callFrameId: frameNumber}, cb) => {\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'scopes',\n      arguments: {\n        number: 0, //<-- TODO what is? seen: 0, 1, 2 \n        frameNumber\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to get scopes'))\n\n      const scopes = res.body.scopes.reduce((o, scope) => {\n        const {type, object:{ref}} = scope\n        if (type > 4) { return o }\n        o[SCOPE_TYPES[type]] = scope\n        scope.context = res.refs.find(({handle}) => handle === ref)\n        return o\n      }, {})\n\n      cb(null, scopes)\n    })\n  }\n\n  const scope = (scope, cb) => {\n    //TODO: \n    //prototype, __proto__, this, getter/setter functions\n    const {object:{ref}} = scope\n\n    lookup({handles:[ref]}, (err, out) => {\n      const {properties} = out.body[ref]\n      const {refs} = out\n      const props = properties.reduce((a, {name, ref}) => {\n        const {\n          type, //typeof string\n          className, // [[Class]] constructor, only non-primitives\n          value,  //only on primitives\n          text, //fallback for null/undefined\n          source, //functions\n          properties // only on non-primitives (objects, functions, arrays)\n        } = refs.find(({handle}) => handle === ref)\n\n        a.push({name, type, className, value, text, source, properties})\n\n        return a\n      }, [])\n\n      cb(null, props)\n    })\n  }\n\n\n  const callstack = cb => backtrace((err, {frames, totalFrames}) => {\n    if (err) return cb(err)\n    if (totalFrames === 0) { return cb() }\n    if (scriptIdToUrl.size) { return fetch() }\n\n    //populate scripts cache\n    scripts(fetch)\n\n\n\n    function fetch () {\n      cb(null, frames.map(({index, func, line, column}) => ({\n        callFrameId: index,\n        functionName: func.inferredName || func.name,\n        location: {\n          scriptId: func.scriptId,\n          lineNumber: line,\n          columnNumber: column,\n          url: scriptIdToUrl.get(func.scriptId)\n        }\n      })))\n    }\n  })\n  \n  const start = (debugPort = 5858, cb) => {\n\n    debug = new Debugger({port: debugPort, host: 'localhost'})\n\n    debug.connect(() => callstack(cb))\n\n    return debug\n\n  }\n\n  // const evaluate = (expression, cb) => {\n  //   let value\n  //   let type = 'object'\n  //   const opts = {\n  //     expression, \n  //     callFrameId: currentContext.bp.callFrames[0].callFrameId\n  //   }\n\n  //   dbg.evaluateOnCallFrame(opts, (err, result) => {\n  //     if (err) { return cb(err) }\n\n  //     if (result.result.type === 'object') {\n  //       const opts = {\n  //         expression: 'JSON.stringify(' + expression + ')', \n  //         callFrameId: currentContext.bp.callFrames[0].callFrameId\n  //       }\n  //       dbg.evaluateOnCallFrame(opts, (err, {result:{result}}) => {\n  //         if (err) { return cb(err) }\n  //         try {\n  //           value = JSON.parse(result.description)\n  //         }\n  //         catch (e) {\n  //           value = result.description\n  //           type = 'string'\n  //         }\n  //         cb(null, {type: type, value: value})\n  //       });\n  //     }\n  //     else {\n  //       cb(null, {type: result.type, value: result.description})\n  //     }\n  //   })\n  // }\n\n\n  return {\n    scripts,\n    start,\n    breakpoints,\n    callstack,\n    resume,\n    pause,\n    scopes,\n    scope,\n    lookup,\n    // evaluate,\n    setBreakpoint,\n    clearBreakpoint,\n    stepOver,\n    stepOut,\n    stepInto,\n  }\n} \n"]}