{"version":3,"sources":["../../src/lib/debug.js"],"names":[],"mappings":"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","file":"debug.js","sourcesContent":["/*\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n */\nimport net from 'net'\nimport fs from 'fs'\nimport {Debugger} from 'yadc'\n\n// important: preserve order\nconst SCOPE_TYPES = ['global', 'local', 'with', 'closure', 'catch', 'block', 'script']\n\nconst PROPERTY_TYPES = {\n  NORMAL: 0,\n  FIELD: 1,\n  CONSTANT: 2,\n  CALLBACKS: 3,\n  HANDLER: 4,\n  INTERCEPTOR: 5,\n  TRANSITION: 6,\n  NONEXISTENT: 7\n}\n\nconst DC_ERROR = Error('disconnected')\n\nexport default () => {\n  let debug\n  let seq = 0\n  const scriptIdToUrl = new Map()\n\n  const scripts = cb => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'scripts',\n      arguments: {\n        types: 4,\n        includeSource: true\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('no scripts'))\n\n      res.body.forEach(({id, name}) => scriptIdToUrl.set(id, name))\n      cb(null, res.body)\n    })\n  }\n\n  const backtrace = cb => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'backtrace',\n      arguments: {\n        inlineRefs: true,\n        fromFrame: 0,\n        maxStringLength: 10000\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (res.running) {\n        debug.emit('unpaused')\n      }\n\n      if (!res.body) return cb(Error('no backtrace'))\n      cb(null, res.body)\n    })\n  }\n\n  const breakpoints = cb => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'listbreakpoints'\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('no breakpoints'))\n      res.body.breakpoints = res.body.breakpoints.filter(bp => bp.type === 'scriptName')\n      cb(null, res.body)\n    })\n  }\n\n  const setBreakpoint = ({line, file: target}, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'setbreakpoint',\n      arguments: {\n        type: 'script', target, line\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to set breakpoint'))\n      cb(null, res.body)\n    })\n  }\n\n  const clearBreakpoint = (breakpoint, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'clearbreakpoint',\n      arguments: {\n        type: 'script',\n        breakpoint\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to unset breakpoint'))\n      cb(null, res.body)\n    })\n  }\n\n  const step = (act, cb = () => {}) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'continue',\n      arguments: {\n        stepaction: act\n      }\n    }, (err) => {\n      if (err) return cb(err)\n      callstack(cb)\n    })\n  }\n\n  const stepOver = cb => step('next', cb)\n  const stepInto = cb => step('in', cb)\n  const stepOut = cb => step('out', cb)\n\n  const resume = (cb = () => {}) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'continue'\n    }, (err) => {\n      if (err) return cb(err)\n      cb()\n    })\n  }\n\n  const pause = (cb = () => {}) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'suspend'\n    }, (err) => {\n      if (err) return cb(err)\n      callstack(cb)\n    })\n  }\n\n  const lookup = ({handles}, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'lookup',\n      arguments: {\n        handles\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      cb(null, res)\n    })\n  }\n\n  const evaluate = ({expression, global, frame, context}, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    const args = {expression, disable_break: true}\n    if (typeof global !== 'undefined') { args.global = global }\n    if (typeof frame !== 'undefined') { args.frame = frame }\n    if (typeof context !== 'undefined') { args.additional_context = context }\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'evaluate',\n      arguments: args\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      cb(null, out)\n    })\n  }\n\n  const frameEvaluate = (frame, expression, cb) => evaluate({expression, frame}, cb)\n  const globalEvaluate = (expression, cb) => evaluate({expression, global: true}, cb)\n\n  const scopes = ({callFrameId: frameNumber}, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    debug.send({\n      seq: ++seq,\n      type: 'request',\n      command: 'scopes',\n      arguments: {\n        number: 0,\n        frameNumber\n      }\n    }, (err, out) => {\n      if (err) return cb(err)\n      if (!out.res) return cb(Error('no response'))\n      const {res} = out\n      if (!res.body) return cb(Error('unable to get scopes'))\n\n      const scopes = res.body.scopes.reduce((o, scope) => {\n        const {type, object: {ref}} = scope\n        if (type > 5) { return o }\n        o[SCOPE_TYPES[type]] = scope\n        scope.context = res.refs.find(({handle}) => handle === ref)\n        return o\n      }, {})\n\n      cb(null, scopes)\n    })\n  }\n\n  const scope = (handles, cb) => {\n    if (!debug.client || !debug.client.writable) return cb(DC_ERROR)\n    // TODO:\n    // __proto__, this, getter/setter functions\n\n    if (!Array.isArray(handles)) handles = [handles]\n\n    handles = handles.map(({object: {ref}}) => ref)\n\n    lookup({handles}, (err, out) => {\n      if (err) {\n        return cb(err)\n      }\n      if (!out.success) {\n        const e = Error('scope lookup error ' + out.message)\n        e.response = out\n        return cb(e)\n      }\n      if (!out.body) {\n        const e = Error('No body in lookup request')\n        e.response = out\n        return cb(e)\n      }\n\n      const {refs} = out\n\n      const objList = handles.map(ref => {\n        const {properties} = out.body[ref]\n\n        if (!properties) { return }\n\n        const props = properties.reduce((a, {name, ref, attributes = 0, propertyType}, i, arr) => {\n          let {\n            type, // e.g. typeof\n            className, // [[Class]] constructor, only non-primitives\n            value,  // only primitives\n            text, // fallback for null/undefined\n            source, // functions\n            properties // only on non-primitives (objects, functions, arrays)\n          } = refs.find(({handle}) => handle === ref)\n\n          const descriptor = {\n            writable: !(attributes & 1 << 0),\n            enumerable: !(attributes & 1 << 1),\n            configurable: !(attributes & 1 << 2)\n          }\n\n          const isPropertyAccessor = attributes === 6 &&\n            propertyType === PROPERTY_TYPES.CALLBACKS &&\n            type === 'undefined'\n\n          // TODO - if getter/setter do an eval in frame to fetch the\n          // get/set function strings (and properties) - since node/v8\n          // doesn't supply the get/set methods via the api\n\n          if (isPropertyAccessor) {\n            type = 'getter/setter'\n            text = '[Getter/Setter]'\n          }\n\n          a.push({name, type, className, value, text, source, properties, descriptor,\n            handle: {\n              object: {ref}\n            }\n          })\n\n          return a\n        }, [])\n\n        return {\n          meta: out.body[ref], props\n        }\n      })\n\n      cb(null, objList.length > 1 ? objList : objList[0])\n    })\n  }\n\n  const callstack = cb => backtrace((err, {frames, totalFrames}) => {\n    if (err) return cb(err)\n    if (totalFrames === 0) { return cb() }\n    if (scriptIdToUrl.size) { return fetch() }\n\n    // populate scripts cache\n    scripts(fetch)\n\n    function fetch () {\n      cb(null, frames.map(({index, func, line, column, receiver}) => ({\n        callFrameId: index,\n        functionName: func.inferredName || func.name,\n        location: {\n          scriptId: func.scriptId,\n          lineNumber: line,\n          columnNumber: column,\n          url: scriptIdToUrl.get(func.scriptId)\n        },\n        contextHandle: {object: receiver}\n      })))\n    }\n  })\n\n  const start = ({port = 5858, host = '127.0.0.1'}, cb) => {\n    debug = new Debugger({port, host})\n    const stdout = __dirname + '/../' + port + '.stdout'\n    const stderr = __dirname + '/../' + port + '.stderr'\n\n    if (fs.existsSync(stdout)) fs.unlinkSync(stdout)\n    if (fs.existsSync(stderr)) fs.unlinkSync(stderr)\n\n    fs.writeFileSync(stdout, '')\n    fs.writeFileSync(stderr, '')\n\n    const stdoutFd = fs.openSync(stdout, 'r')\n    const stderrFd = fs.openSync(stderr, 'r')\n\n    let lastStdoutSize = 0\n    let lastStderrSize = 0\n\n    fs.watch(stdout, (evt) => {\n      if (!/change/.test(evt)) return\n      const {size} = fs.statSync(stdout)\n      const bufferSize = size - lastStdoutSize\n      const buffer = Buffer(bufferSize)\n      lastStdoutSize = size\n      if (!bufferSize) return\n      fs.readSync(stdoutFd, buffer, 0, bufferSize, 'utf8')\n      debug.emit('stdout', buffer + '')          \n    })\n\n    fs.watch(stderr, (evt) => {\n      if (!/change/.test(evt)) return\n      const {size} = fs.statSync(stdout)\n      const bufferSize = size - lastStderrSize\n      const buffer = Buffer(bufferSize)\n      lastStderrSize = size\n      if (!bufferSize) return\n      fs.readSync(stderrFd, buffer, 0, bufferSize, 'utf8')\n      debug.emit('stderr', buffer + '')\n    })\n\n    const connected = () => {\n      callstack((err, stack) => {\n        globalEvaluate(`\n          (function () {\n            if (process.wrappedForDebugger) return\n            process.stdout.write = (function(fn) {\n              return function(chunk) {\n                try {\n                  process.mainModule.require('fs').appendFileSync('${stdout}', chunk)\n                } catch (e) {\n          \n                }\n\n                return fn.apply(process.stdout, arguments)\n              }\n            } (process.stdout.write))\n\n            process.stderr.write = (function(fn) {\n              return function(chunk) {\n                try {\n                  process.mainModule.require('fs').appendFileSync('${stderr}', chunk)\n                } catch (e) {\n\n                }\n                return fn.apply(process.stderr, arguments)\n              }\n            } (process.stderr.write))\n\n            process.wrappedForDebugger = true\n          }())\n        `, evalErr => {\n          cb(err || evalErr, stack)\n        })\n\n      })\n    }\n\n    let errorState = false\n    const attempt = () => {\n      if (errorState) return\n      debug.connect(connected) \n      debug.once('error', e => {\n        const {code} = e\n\n        if (code === 'ECONNREFUSED') {\n          setTimeout(attempt, 1000) //TODO cancel previous connect on timeout\n          return\n        }\n\n        errorState = true\n        console.error('error', e)\n      })\n    }\n\n    attempt()\n\n    debug.on('event', (evt) => {\n      if (evt.event === 'break') {\n        debug.emit('break', evt)\n      }\n    })\n\n    return debug\n  }\n\n  return {\n    scripts,\n    start,\n    breakpoints,\n    callstack,\n    resume,\n    pause,\n    scopes,\n    scope,\n    lookup,\n    evaluate,\n    frameEvaluate,\n    globalEvaluate,\n    setBreakpoint,\n    clearBreakpoint,\n    stepOver,\n    stepOut,\n    stepInto\n  }\n}\n"]}