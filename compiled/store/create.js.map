{"version":3,"sources":["../../src/store/create.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;IAOY,QAAQ;;;;;;AAEpB,IAAM,yBAAyB,GAC7B,WARA,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;CAmCd,QApCD,WAAW,CAoCG,CAAA;;AAEhB,IAAM,OAAO,GAAG,WApCd,eAAe,EAoCe,QAAQ,CAAC,CAAA;;kBAE1B,UAAA,YAAY;SACzB,yBAAyB,CAAC,OAAO,EAAE,YAAY,CAAC;CAAA","file":"create.js","sourcesContent":["import {\n  createStore, \n  applyMiddleware, \n  combineReducers\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport logger from 'redux-logger'\nimport * as reducers from '../reducers'\n\nconst createStoreWithMiddleware = \n  applyMiddleware(thunk\n  // , logger({\n  //   logger: console,\n  //   // actionTransformer: action => {\n  //   //   const {payload} = action\n  //   //   if (Array.isArray(payload)) payload.forEach(o => {\n  //   //     if (o.source) o.source = o.source.substr(0, 150)\n  //   //   })\n  //   //   if (typeof payload === 'string') {\n  //   //     action.payload = payload.substr(0, 150)\n  //   //   }\n  //   //   return action\n  //   // },\n  //   // stateTransformer: state => {\n  //   //   if (Array.isArray(state)) state.forEach(o => {\n  //   //     if (o.source) o.source = o.source.substr(0, 150) + '...'\n  //   //   })\n  //   //   return state\n  //   // },\n  //   colors: {\n  //     title: false,\n  //     prevState: false,\n  //     action: false,\n  //     nextState: false,\n  //     error: false,\n  //   }\n  // })\n  )(createStore)\n\nconst reducer = combineReducers(reducers)\n\nexport default initialState => \n  createStoreWithMiddleware(reducer, initialState)"]}