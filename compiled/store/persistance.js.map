{"version":3,"sources":["../../src/store/persistance.js"],"names":[],"mappings":";;;;;kBAEwB;;;;;;;;AAAT,SAAS,WAAT,CAAsB,EAAtB,EAA0B;AACvC,MAAM,SAAS,aAAG,UAAH,CAAc,EAAd,CAAT,CADiC;AAEvC,MAAI,CAAC,MAAD,EAAS;AAAE,iBAAG,aAAH,CAAiB,EAAjB,EAAqB,IAArB,EAAF;GAAb;AACA,MAAI,gBAAJ,CAHuC;;AAKvC,MAAI;AACF,WAAO,CAAC,MAAD,GAAU,EAAV,GAAe,KAAK,KAAL,CAAW,aAAG,YAAH,CAAgB,EAAhB,CAAX,CAAf,CADL;GAAJ,CAEE,OAAO,CAAP,EAAU;AACV,WAAO,EAAP,CADU;GAAV;;AAIF,SAAO,eAAO;AACZ,QAAM,cAAc,OAAO,IAAP,CAAY,GAAZ,CAAd,CADM;AAEZ,QAAM,aAAa,OAAO,MAAP,CAAc,GAAd,CAAb,CAFM;;AAIZ,WAAO;UAAE;UAAU;aAAc;eAAQ,kBAAU;AACjD,cAAM,SAAS,KAAK,MAAL,CAAT,CAD2C;AAEjD,cAAM,QAAQ,YAAY,OAAZ,CAAoB,OAAO,IAAP,CAA5B,CAF2C;;AAIjD,cAAI,CAAC,KAAD,EAAQ;AACV,gBAAM,QAAQ,UAAR,CADI;AAEV,gBAAI,KAAK,WAAW,KAAX,CAAL,CAFM;;AAIV,gBAAI,OAAO,EAAP,MAAe,EAAf,EAAmB;AACrB,mBAAK,GAAG,SAAH,CAAL,GAAqB,GAAG,SAAH,CAAa,MAAM,GAAG,SAAH,CAAnB,CAArB,CADqB;AAErB,qBAAO,KAAK,IAAL,EAAW,EAAX,CAAP,CAFqB;aAAvB;;AAKA,iBAAK,EAAL,IAAW,MAAM,EAAN,CAAX,CATU;AAUV,iBAAK,IAAL,EAAW,EAAX,EAVU;WAAZ;;AAaA,iBAAO,MAAP,CAjBiD;SAAV;OAAR;KAA1B,CAJK;GAAP,CAXgC;CAA1B;;AAqCf,SAAS,IAAT,CAAe,IAAf,EAAqB,EAArB,EAAyB;;AAEvB,SAAO,aAAG,aAAH,CAAiB,EAAjB,EAAqB,KAAK,SAAL,CAAe,IAAf,CAArB,CAAP,CAFuB;CAAzB","file":"persistance.js","sourcesContent":["import fs from 'fs'\n\nexport default function persistance (to) {\n  const exists = fs.existsSync(to)\n  if (!exists) { fs.writeFileSync(to, '{}') }\n  let data\n\n  try {\n    data = !exists ? {} : JSON.parse(fs.readFileSync(to))\n  } catch (e) {\n    data = {}\n  }\n\n  return cfg => {\n    const actionTypes = Object.keys(cfg)\n    const namespaces = Object.values(cfg)\n\n    return ({dispatch, getState}) => next => action => {\n      const result = next(action)\n      const index = actionTypes.indexOf(action.type)\n\n      if (~index) {\n        const state = getState()\n        let ns = namespaces[index]\n\n        if (Object(ns) === ns) {\n          data[ns.namespace] = ns.transform(state[ns.namespace])\n          return save(data, to)\n        }\n\n        data[ns] = state[ns]\n        save(data, to)\n      }\n\n      return result\n    }\n  }\n}\n\nfunction save (data, to) {\n  // if necessary, make this function batch and throttle\n  return fs.writeFileSync(to, JSON.stringify(data))\n}\n"]}