{"version":3,"sources":["../../src/store/persistance.js"],"names":[],"mappings":";;;;;kBAEwB,WAAW;;;;;;;;AAApB,SAAS,WAAW,CAAC,EAAE,EAAE;AACtC,MAAM,MAAM,GAAG,aAAG,UAAU,CAAC,EAAE,CAAC,CAAA;AAChC,MAAI,CAAC,MAAM,EAAE;AAAE,iBAAG,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;GAAE;;AAE3C,MAAI,IAAI,YAAA,CAAA;;AAER,MAAI;AACF,QAAI,GAAG,CAAC,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,aAAG,YAAY,CAAC,EAAE,CAAC,CAAC,CAAA;GACtD,CAAC,OAAO,CAAC,EAAE;AACV,QAAI,GAAG,EAAE,CAAA;GACV;;AAED,SAAO,UAAA,GAAG,EAAI;AACZ,QAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;AACpC,QAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;;AAErC,WAAO;UAAE,QAAQ,QAAR,QAAQ;UAAE,QAAQ,QAAR,QAAQ;aAAM,UAAA,IAAI;eAAI,UAAA,MAAM,EAAI;AACjD,cAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;AAC3B,cAAM,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;;AAE9C,cAAI,CAAC,KAAK,EAAE;AACV,gBAAM,KAAK,GAAG,QAAQ,EAAE,CAAA;AACxB,gBAAI,EAAE,GAAG,UAAU,CAAC,KAAK,CAAC,CAAA;;AAE1B,gBAAI,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE;AACrB,kBAAI,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;AACtD,qBAAO,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;aACtB;;AAED,gBAAI,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,CAAA;AACpB,gBAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;WACf;;AAED,iBAAO,MAAM,CAAA;SACd;OAAA;KAAA,CAAA;GACF,CAAA;CACF;;AAED,SAAS,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE;;AAEtB,SAAO,aAAG,aAAa,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAA;CAClD","file":"persistance.js","sourcesContent":["import fs from 'fs'\n\nexport default function persistance(to) {\n  const exists = fs.existsSync(to)\n  if (!exists) { fs.writeFileSync(to, '{}') }\n  \n  let data \n\n  try { \n    data = !exists ? {} : JSON.parse(fs.readFileSync(to))\n  } catch (e) {\n    data = {}\n  }\n\n  return cfg => {\n    const actionTypes = Object.keys(cfg)\n    const namespaces = Object.values(cfg)\n\n    return ({dispatch, getState}) => next => action => {\n      const result = next(action)\n      const index = actionTypes.indexOf(action.type)\n\n      if (~index) {\n        const state = getState()\n        let ns = namespaces[index]\n        \n        if (Object(ns) === ns) {\n          data[ns.namespace] = ns.transform(state[ns.namespace])\n          return save(data, to)\n        } \n\n        data[ns] = state[ns]        \n        save(data, to)\n      }\n\n      return result\n    }\n  }\n}\n\nfunction save(data, to) {\n  //if necessary, make this function batch and throttle\n  return fs.writeFileSync(to, JSON.stringify(data))\n}"]}