{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAA;;AAmBhC,IAAM,YAAY,GAAG,eAAK,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,oBAAoB,CAAC,CAAA;;AAEzE,IAAM,UAAU,GAAG,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAC,CAAA;;AAErD,IAAM,OAAO,GAAG,AAAC,aAAG,UAAU,CAAC,YAAY,CAAC,gBACpC,UAAU,EAAK,OAAO,CAAC,YAAY,CAAC,iBACpC,UAAU,CAAC,CAAA;;AAEnB,OAAO,CAAC,MAAM,GAAG,iBAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE/C,IAAM,KAAK,GAAG;AACZ,KAAG,EAAE,SAAS;AACd,OAAK,EAAE,QAAQ;GACZ,OAAO,EACV,CAAA;;IAEK,QAAQ,GAAI,KAAK,CAAjB,QAAQ;;;;;sDAEA,iBAAO,GAAG;yBAAG,IAAI;QAAE,IAAI,6BAAG,WAAW;yBAAE,IAAI;QAAE,IAAI,6BAAG,IAAI;QASjE,MAAM,EAKN,QAAQ;;;;;AAbZ,gBAAI,GAAG,EAAE;AACP,kBAAI;AACF,uBAAO,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,CAAA;eAC7B,CAAC,OAAO,CAAC,EAAE;AACV,uBAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,GAAG,CAAC,CAAA;eAC3D;aACF;;AAEG,kBAAM,GAAG,sBAAa,KAAK,CAAC;;AAEhC,oBAAQ,CAAC,aAhCT,aAAa,EAgCU,yBAAyB,GAAG,IAAI,CAAC,CAAC,CAAA;AACzD,oBAAQ,CAAC,aAlCT,cAAc,EAkCU,EAAC,IAAI,EAAJ,IAAI,EAAE,IAAI,EAAJ,IAAI,EAAC,CAAC,CAAC,CAAA;;AAElC,oBAAQ,GAAG,yBAA0B;kBAAxB,MAAM,SAAN,MAAM;kBAAE,GAAG,SAAH,GAAG;kBAAE,KAAK,SAAL,KAAK;;AACjC,qBACE;;;gBACE,0CA1CqC,IAAI,OA0CjC;gBACP,GAAG,KAAK,SAAS,IAAI,0CA3CnB,OAAO,OA2CsB;gBAC/B,GAAG,KAAK,SAAS,IAAI,0CA5C5B,OAAO,OA4C+B;gBAChC,0CA7CsB,GAAG,eA6ChB,MAAM,CAAC,GAAG,IAAE,MAAM,EAAE,KAAK,KAAK,UAAU,AAAC,IAAE;gBACnD,KAAK,KAAK,UAAU,IAAI,0CA9CE,QAAQ,IA8CA,OAAO,EAAE,KAAK,KAAK,UAAU,AAAC,GAAE;gBACnE,0CA/CY,QAAQ,EA+CN,MAAM,CAAC,QAAQ,CAAG;eACxB,CACX;aACF;;AAED,oBAAQ,GAAG,gBA1DK,OAAO,EA0DJ;kBAAE,MAAM,SAAN,MAAM;kBAAE,GAAG,SAAH,GAAG;kBAAE,KAAK,SAAL,KAAK;qBAAO,EAAC,MAAM,EAAN,MAAM,EAAE,GAAG,EAAH,GAAG,EAAE,KAAK,EAAL,KAAK,EAAC;aAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;;6CAEvE,kBA3DD,MAAM,EA2DE;0BA5DR,QAAQ;gBA4DU,KAAK,EAAE,KAAK,AAAC;cAAC,8BAAC,QAAQ,OAAE;aAAW,EAAE,MAAM,CAAC;;;;;;;;GACtE","file":"index.js","sourcesContent":["Error.stackTraceLimit = Infinity\nimport 'babel-polyfill'\nimport 'source-map-support/register'\nimport fs from 'fs'\nimport path from 'path'\nimport React from 'react'\nimport {Provider, connect} from 'react-redux'\nimport {render} from 'react-blessed'\nimport createStore from './store/create'\nimport createScreen from './screen'\nimport config from './config'\nimport {\n  Console, Sources, Controls, Cog, Settings, Tabs\n} from './containers'\nimport {\n  startDebugging,\n  receiveSource\n} from './actions'\n\nconst userSettings = path.join(__dirname, 'config', 'user-settings.json')\n\nconst defaultCfg = {tooltips: true, layout: 'normal'}\n\nconst userCfg = (fs.existsSync(userSettings))\n  ? {...defaultCfg, ...require(userSettings)}\n  : {...defaultCfg}\n\nuserCfg.layout = config.layouts[userCfg.layout]\n\nconst store = createStore({\n  tab: 'sources',\n  panel: 'editor',\n  ...userCfg\n})\n\nconst {dispatch} = store\n\nexport default async (pid, {host: host = '127.0.0.1', port: port = 5858}) => {\n  if (pid) {\n    try {\n      process.kill(pid, 'SIGUSR1')\n    } catch (e) {\n      console.log('Warning unable to locate supplied pid ', pid)\n    }\n  }\n\n  let screen = createScreen(store)\n\n  dispatch(receiveSource('Waiting for debug port ' + port))\n  dispatch(startDebugging({host, port}))\n\n  let Devtools = ({layout, tab, panel}) => {\n    return (\n      <element>\n        <Tabs />\n        {tab === 'sources' && <Sources/>}\n        {tab === 'console' && <Console/>}\n        <Cog {...layout.cog} active={panel === 'settings'}/>\n        {panel === 'settings' && <Settings focused={panel === 'settings'}/>}\n        <Controls {...layout.controls}/>\n      </element>\n    )\n  }\n\n  Devtools = connect(({layout, tab, panel}) => ({layout, tab, panel}))(Devtools)\n\n  return render(<Provider store={store}><Devtools/></Provider>, screen)\n}\n"]}