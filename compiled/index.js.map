{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill'\nimport React from 'react'\nimport {Component} from 'react'\nimport blessed from 'blessed'\nimport {Provider, connect} from 'react-redux'\nimport {render} from 'react-blessed'\nimport functional from 'react-functional'\nimport portly from 'portly'\nimport createStore from './store/create'\nimport createScreen from './screen'\nimport config from './config'\nimport { Console, Sources } from './containers'\nimport { Tabs, Cog, Settings } from './components'\nimport createDebugger from './lib/debug'\nimport {\n  receiveCallstack,\n  receiveBreakpoints,\n  receiveScope,\n  receiveSource,\n  receiveSources,\n  selectFile,\n  selectFrame,\n  pause,\n  resume,\n  stepOver,\n  stepInto,\n  stepOut,\n  nextFrame,\n  previousFrame\n} from './actions'\n\nconst store = createStore({\n  tab: 'sources',\n  panel: 'editor',\n  layout: config.layout,\n})\nconst {dispatch} = store\nconst tabs = ['Sources', 'Networking', 'Profiling', 'Console']\n\nexport const debug = createDebugger()\n\nexport default async (pid) => {\n  const debugPort = 5858\n\n  if (pid) {\n    try { \n      process.kill(pid, 'SIGUSR1')\n    } catch (e) {\n      console.log('Warning unable to locate supplied pid ', pid)\n    }\n  }\n\n  let screen = createScreen(store)\n\n  dispatch(receiveSource('Waiting for port debug port ' + debugPort))\n\n  portly(debugPort).then(portPid => {\n    debug.start(debugPort, (err, callstack) => {\n      dispatch(receiveCallstack(callstack))\n\n      debug.scripts((err, scripts) => {\n        dispatch(receiveSources(scripts))\n        if (callstack) {\n          return dispatch(selectFrame(0))\n        }\n        const {name} = (scripts.find(s => s.name[0] === '/') || scripts[0])\n        dispatch(selectFile(name))\n      })\n\n      debug.breakpoints((err, {breakpoints}) => {\n        if (err) { return console.error(err) }\n        receiveBreakpoints(breakpoints)\n      })\n    })\n  })\n\n  let Devtools = ({layout, tab, panel}) => {\n    return (\n      <element>\n        <Tabs dispatch={dispatch} items={tabs} {...layout.tabs}/>\n        {tab === 'sources' && <Sources/>}\n        {tab === 'console' && <Console/>}\n        <Cog {...layout.cog} active={panel === 'settings'} dispatch={dispatch}/>\n        {\n          panel === 'settings' && \n            <Settings dispatch={dispatch} layout={layout} focused={panel === 'settings'} {...layout.settings} />\n        }\n      </element>\n    )\n  }\n\n  Devtools = connect(({layout, tab, panel}) => ({layout, tab, panel}))(Devtools)\n\n  return render(<Provider store={store}><Devtools/></Provider>, screen)\n}"]}